on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  create_release:
    name: create_release
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v1
      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
           tag_name: ${{ github.ref }}
           release_name: Release ${{ github.ref }}
           draft: false
           prerelease: false
      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Save Release URL File for Publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  build_and_upload:
    needs: [create_release]
    name: Build and Upload
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          pyinstaller --windowed --hidden-import='PIL._tkinter_finder' --onefile run.py -n friendly_gt
      - name: Load Release URL File
        uses: actions/download-artifact@v1
        with:
          name: release_url
      - name: Get Rlease File Name and Upload URL
        id: get_release_info
        shell: bash
        run: |
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value
      - name: Upload Release Asset - Ubuntu/Mac
        if: matrix.os != 'windows-latest'
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dist/friendly_gt
          asset_name: friendly_gt_${{ matrix.os }}
          asset_content_type: application/octet-stream
      - name: Upload Release Asset - Windows
        if: matrix.os == 'windows-latest'
        id: upload-release-asset-win 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dist/friendly_gt.exe
          asset_name: friendly_gt_${{ matrix.os }}.exe
          asset_content_type: application/octet-stream
      - name: Bundle Mac OS App
        if: matrix.os == 'macos-latest'
        run: |
           zip -r ./friendly_gt-macos-app.zip ./dist/friendly_gt.app
      - name: Upload Mac Os App
        if: matrix.os == 'macos-latest'
        id: upload-release-asset-mac-app
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./friendly_gt-macos-app.zip
          asset_name: friendly_gt_${{ matrix.os }}.app
          asset_content_type: application/octet-stream
